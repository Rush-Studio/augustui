{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cascade-cards",
  "type": "registry:ui",
  "title": "Cascade Cards",
  "description": "A cascade cards component that displays a list of cards.",
  "dependencies": [
    "react",
    "motion"
  ],
  "files": [
    {
      "path": "registry/augustui/cascade-cards.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Sparkles } from \"lucide-react\";\nimport { CSSProperties } from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface CascadeCardProps {\n  className?: string;\n  icon?: React.ReactNode;\n  title?: string;\n  description?: string;\n  date?: string;\n  titleClassName?: string;\n  style?: CSSProperties;\n}\n\nfunction CascadeCard({\n  className,\n  icon = <Sparkles className=\"size-4 text-blue-300\" />,\n  title = \"Featured\",\n  description = \"Discover amazing content\",\n  date = \"Just now\",\n  titleClassName = \"text-blue-500\",\n  style,\n}: CascadeCardProps) {\n  return (\n    <motion.div\n      className={cn(\n        \"relative flex h-36 w-[22rem] select-none flex-col justify-between rounded-xl border-2 bg-muted/70 px-4 py-3 backdrop-blur-sm after:absolute after:-right-1 after:top-[-5%] after:h-[110%] after:w-80 after:bg-gradient-to-l after:from-background after:to-transparent after:content-[''] hover:border-white/20 hover:bg-muted [&>*]:flex [&>*]:items-center [&>*]:gap-2\",\n        className,\n      )}\n      style={style}\n      whileHover={{ filter: \"grayscale(0)\" }}\n      transition={{ duration: 0.7 }}\n    >\n      <div>\n        <span className=\"relative inline-block rounded-full bg-blue-800 p-1\">\n          {icon}\n        </span>\n        <p className={cn(\"text-lg font-medium\", titleClassName)}>{title}</p>\n      </div>\n      <p className=\"whitespace-nowrap text-lg\">{description}</p>\n      <p className=\"text-muted-foreground\">{date}</p>\n    </motion.div>\n  );\n}\n\ninterface CascadeCardsProps {\n  cards: CascadeCardProps[];\n  variant?: \"default\" | \"custom\";\n  maxVisible?: number;\n  gapX?: number;\n  gapY?: number;\n  skewAngle?: number;\n  hoverLift?: number;\n  hoverEffect?: \"lift\" | \"top\" | \"both\" | \"none\";\n}\n\nexport default function CascadeCards({\n  cards,\n  gapX = 50,\n  gapY = 25,\n  skewAngle = -8,\n  hoverLift = 15,\n  hoverEffect = \"none\",\n}: CascadeCardsProps) {\n  // Default cards if none provided\n  const defaultCards = [\n    {\n      icon: <Sparkles className=\"size-4 text-blue-300\" />,\n      title: \"New\",\n      description: \"Latest updates and features\",\n      date: \"Today\",\n      iconClassName: \"text-blue-500\",\n      titleClassName: \"text-blue-500\",\n    },\n    {\n      icon: <Sparkles className=\"size-4 text-blue-300\" />,\n      title: \"New\",\n      description: \"Latest updates and features\",\n      date: \"Today\",\n      iconClassName: \"text-blue-500\",\n      titleClassName: \"text-blue-500\",\n    },\n    {\n      icon: <Sparkles className=\"size-4 text-blue-300\" />,\n      title: \"New\",\n      description: \"Latest updates and features\",\n      date: \"Today\",\n      iconClassName: \"text-blue-500\",\n      titleClassName: \"text-blue-500\",\n    },\n  ];\n\n  let displayCards = cards || defaultCards;\n\n  return (\n    <div className=\"relative flex h-[300px] w-full items-center justify-center\">\n      {displayCards.map((cardProps, index) => {\n        // Calculate dynamic positioning based on index\n        const xOffset = index * gapX;\n        const yOffset = index * gapY;\n        const liftAmount = hoverEffect === \"none\" ? 0 : hoverLift;\n\n        // Determine z-index behavior on hover\n        const hoverZIndexValue = (() => {\n          if (hoverEffect === \"none\") return undefined;\n          if (hoverEffect === \"top\") return displayCards.length + 1;\n          if (hoverEffect === \"lift\" || hoverEffect === \"both\")\n            return displayCards.length + 1;\n          return undefined;\n        })();\n\n        // Dynamic styles based on index with explicit skew\n        const cardStyle: CSSProperties = {\n          filter: \"grayscale(100%)\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          zIndex: index,\n        };\n\n        const cardClassName = cn(\n          \"before:absolute before:left-0 before:top-0 before:size-full before:rounded-xl before:bg-background/50 before:opacity-100 before:transition-opacity before:duration-700 before:content-[''] hover:before:opacity-0\",\n        );\n\n        return (\n          <motion.div\n            key={index}\n            initial={{\n              x: xOffset,\n              y: yOffset,\n              skewY: skewAngle,\n              opacity: 0,\n            }}\n            animate={{\n              x: xOffset,\n              y: yOffset,\n              skewY: skewAngle,\n              opacity: 1,\n              zIndex: index,\n            }}\n            whileHover={\n              hoverEffect === \"top\"\n                ? {\n                    y: yOffset - liftAmount,\n                    boxShadow:\n                      \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n                  }\n                : hoverEffect === \"lift\"\n                  ? {\n                      zIndex: displayCards.length + 1,\n                      boxShadow:\n                        \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n                    }\n                  : hoverEffect === \"both\"\n                    ? {\n                        y: yOffset - liftAmount,\n                        zIndex: displayCards.length + 1,\n                        boxShadow:\n                          \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n                      }\n                    : {\n                        boxShadow:\n                          \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n                      }\n            }\n            transition={{ duration: 0.7 }}\n            style={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n            }}\n          >\n            <CascadeCard\n              {...cardProps}\n              className={cardClassName}\n              style={cardStyle}\n            />\n          </motion.div>\n        );\n      })}\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/augustui/cascade-cards.tsx"
    }
  ]
}