{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "velvet-view",
  "type": "registry:ui",
  "title": "Velvet View",
  "description": "A velvet view component that displays a list of text.",
  "dependencies": [
    "react",
    "motion"
  ],
  "files": [
    {
      "path": "registry/augustui/velvet-view.tsx",
      "content": "\"use client\";\nimport { useState } from \"react\";\nimport { motion, useMotionValue } from \"framer-motion\";\n\n// Define the type for each slide item\ninterface SlideItem {\n  imageSrc: string;\n  imageText: string;\n}\n\ninterface VelvetViewProps {\n  slides: SlideItem[];\n}\n\nexport default function VelvetView({\n  slides = [\n    {\n      imageSrc:\n        \"https://images.unsplash.com/photo-1481018085669-2bc6e4f00eed?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n      imageText: \"Ashen grace in slow motion\",\n    },\n    {\n      imageSrc:\n        \"https://images.unsplash.com/photo-1475070929565-c985b496cb9f?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n      imageText: \"Time hums in glass veins\",\n    },\n    {\n      imageSrc:\n        \"https://images.unsplash.com/photo-1509023464722-18d996393ca8?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n      imageText: \"Static hearts, cinematic longing.\",\n    },\n  ],\n}: VelvetViewProps) {\n  const [index, setIndex] = useState(0);\n  const rotateY = useMotionValue(0);\n\n  const nextImage = () => setIndex((index + 1) % slides.length);\n  const prevImage = () => setIndex((index - 1 + slides.length) % slides.length);\n\n  const handlePressStart = (direction: string) => {\n    rotateY.set(direction === \"left\" ? -25 : 25);\n  };\n\n  const handlePressEnd = (direction: string) => {\n    setTimeout(() => {\n      rotateY.set(0);\n      direction === \"right\" ? nextImage() : prevImage();\n    }, 150);\n  };\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    const { clientX, currentTarget } = e;\n    const { left, width } = currentTarget.getBoundingClientRect();\n    const x = (clientX - left) / width - 0.5;\n    rotateY.set(x * 10);\n  };\n\n  const handleMouseLeave = () => {\n    rotateY.set(0);\n  };\n\n  return (\n    <div\n      className=\"relative size-[300px] overflow-hidden rounded-[50px] bg-background\"\n      style={{ perspective: \"1000px\" }} // Tailwind doesn't support this directly\n    >\n      <motion.div\n        className=\"relative size-full\"\n        style={{\n          rotateY,\n          transformStyle: \"preserve-3d\", // Required for 3D to take effect\n          scale: 1.2, // Increased from 1.1 to prevent cropping during tilt\n          transition: \"transform 0.3s ease\", // Added animation time for smoother tilting\n        }}\n        onMouseMove={handleMouseMove}\n        onMouseLeave={handleMouseLeave}\n      >\n        <img\n          src={slides[index].imageSrc}\n          alt={`Slide ${index}`}\n          className=\"pointer-events-none size-full select-none object-cover\"\n          draggable={false}\n        />\n\n        <div className=\"absolute left-14 top-14 z-10 w-[100px] leading-tight\">\n          <p className=\"text-sm font-medium text-primary drop-shadow-md\">\n            {slides[index].imageText}\n          </p>\n        </div>\n      </motion.div>\n\n      {/* Left Control */}\n      <div\n        className=\"group absolute left-0 top-0 flex h-full w-1/4 cursor-pointer items-center justify-center\"\n        onMouseDown={() => handlePressStart(\"left\")}\n        onMouseUp={() => handlePressEnd(\"left\")}\n      >\n        <div className=\"absolute inset-0 rounded-l-[40px] bg-gradient-to-r from-background/20 to-transparent opacity-0 backdrop-blur-[1px] transition-opacity duration-300 group-hover:opacity-100\" />\n        <span className=\"relative z-10 -ml-6 text-2xl text-primary/30 transition-opacity duration-300 group-hover:text-primary\">\n          {\"<\"}\n        </span>\n      </div>\n\n      {/* Right Control */}\n      <div\n        className=\"group absolute right-0 top-0 flex h-full w-1/4 cursor-pointer items-center justify-center\"\n        onMouseDown={() => handlePressStart(\"right\")}\n        onMouseUp={() => handlePressEnd(\"right\")}\n      >\n        <div className=\"absolute inset-0 rounded-r-[40px] bg-gradient-to-l from-background/20 to-transparent opacity-0 backdrop-blur-[1px] transition-opacity duration-300 group-hover:opacity-100\" />\n        <span className=\"relative z-10 -mr-6 text-2xl text-primary/30 transition-opacity duration-300 group-hover:text-primary\">\n          {\">\"}\n        </span>\n      </div>\n\n      <div className=\"absolute right-10 top-12 z-20\">\n        <div className=\"flex gap-0.5\">\n          {slides.map((_, i) => (\n            <div\n              key={i}\n              className={`h-0.5 w-2 rounded-full transition-all duration-300 ${\n                i === index ? \"bg-primary\" : \"bg-primary/20\"\n              }`}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/augustui/velvet-view.tsx"
    }
  ]
}