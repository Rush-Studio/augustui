{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "shape-shifter",
  "type": "registry:ui",
  "title": "Shape Shifter",
  "description": "A shape shifter component that shifts the shape of the element.",
  "dependencies": [
    "react",
    "motion"
  ],
  "files": [
    {
      "path": "registry/augustui/shape-shifter.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { motion } from \"motion/react\";\nimport { useEffect, useState, useRef } from \"react\";\n\nconst sampleImages = [\n  \"https://images.unsplash.com/photo-1721059537602-e844ccc60c94?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n  \"https://images.unsplash.com/photo-1661962399580-80301d32d791?q=80&w=3850&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n  \"https://images.unsplash.com/photo-1663792573804-0347dfaffdab?q=80&w=3880&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n  \"https://images.unsplash.com/photo-1664700651198-42cf8d382dc3?q=80&w=3871&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n  \"https://images.unsplash.com/photo-1722929517020-69d5530e8c92?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n  \"https://images.unsplash.com/photo-1711239682372-fd545e32cb5b?q=80&w=3276&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n  \"https://images.unsplash.com/photo-1663868891817-8853b9eb83f0?q=80&w=3864&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n  \"https://images.unsplash.com/photo-1721059571819-e57015549fa1?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n];\n\ninterface ShapeShifterVariant {\n  borderRadius: string;\n  width: string;\n  height: string;\n  rotate: number;\n}\n\ninterface ShapeShifterProps {\n  images: string[];\n  imagesInterval?: number;\n  shapeInterval?: number;\n  shapeVariants?: ShapeShifterVariant[] | false;\n  className?: string;\n}\n\nexport default function ShapeShifter({\n  images = sampleImages,\n  imagesInterval = 500,\n  shapeInterval = 1500,\n  shapeVariants,\n  className,\n}: ShapeShifterProps) {\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [currentShape, setCurrentShape] = useState(0);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const preloadedImages = useRef<HTMLImageElement[]>([]);\n\n  // Preload all images\n  useEffect(() => {\n    let loadedCount = 0;\n    const imageElements: HTMLImageElement[] = [];\n\n    images.forEach((src, index) => {\n      const img = new Image();\n      img.src = src;\n      img.onload = () => {\n        loadedCount++;\n        if (loadedCount === images.length) {\n          setImagesLoaded(true);\n        }\n      };\n      img.onerror = () => {\n        console.error(`Failed to load image: ${src}`);\n        loadedCount++;\n        if (loadedCount === images.length) {\n          setImagesLoaded(true);\n        }\n      };\n      imageElements[index] = img;\n    });\n\n    preloadedImages.current = imageElements;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Set loaded state after component mounts\n  useEffect(() => {\n    setIsLoaded(true);\n  }, []);\n\n  // Change image every second\n  useEffect(() => {\n    if (!imagesLoaded) return;\n\n    const interval = setInterval(() => {\n      setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length);\n    }, imagesInterval);\n\n    return () => clearInterval(interval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imagesLoaded]);\n\n  // Cycle through shapes\n  useEffect(() => {\n    if (!imagesLoaded || !shapeVariants) return;\n\n    let currentIndex = 0;\n\n    const interval = setInterval(() => {\n      currentIndex =\n        (currentIndex + 1) %\n        (Array.isArray(shapeVariants) ? shapeVariants.length : 1);\n      setCurrentShape(currentIndex);\n    }, shapeInterval);\n\n    return () => clearInterval(interval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imagesLoaded]);\n\n  return (\n    <div\n      className={cn(\n        \"relative flex size-full items-center justify-center\",\n        className,\n      )}\n    >\n      <motion.div\n        className=\"flex items-center justify-center overflow-hidden bg-gradient-to-r from-purple-500 to-pink-500\"\n        initial={\n          isLoaded && shapeVariants\n            ? {\n                borderRadius: shapeVariants[0].borderRadius,\n                width: shapeVariants[0].width,\n                height: shapeVariants[0].height,\n                rotate: shapeVariants[0].rotate,\n              }\n            : false\n        }\n        animate={\n          shapeVariants && typeof currentShape === \"number\"\n            ? {\n                borderRadius: shapeVariants[currentShape].borderRadius,\n                width: shapeVariants[currentShape].width,\n                height: shapeVariants[currentShape].height,\n                rotate: shapeVariants[currentShape].rotate,\n              }\n            : false\n        }\n        variants={undefined}\n        style={\n          !isLoaded\n            ? {\n                width: \"100px\",\n                height: \"100px\",\n                borderRadius: \"50%\",\n                overflow: \"hidden\",\n              }\n            : undefined\n        }\n        transition={{\n          type: \"spring\",\n          stiffness: 100,\n          damping: 13,\n        }}\n      >\n        {imagesLoaded ? (\n          <img\n            src={images[currentImageIndex]}\n            alt=\"Changing image\"\n            className=\"size-full object-cover\"\n          />\n        ) : (\n          <div className=\"size-full animate-pulse bg-gray-300\"></div>\n        )}\n      </motion.div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/augustui/shape-shifter.tsx"
    }
  ]
}